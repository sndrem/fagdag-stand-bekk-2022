{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/unsplash/$photoId.tsx", "../app/constants.ts", "../app/components/PhotoAttribution.tsx", "../app/services/sqip.ts", "../app/lib/db.server.ts", "../app/services/imageDownloadService.ts", "../app/services/unsplash.ts", "../app/routes/search/index.tsx", "../app/components/Soketips.tsx", "../app/routes/healthcheck.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport appStylesheetUrl from \"./styles/app.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    { rel: \"stylesheet\", href: appStylesheetUrl },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Fagdag-stand\",\n  viewport: \"width=device-width,initial-scale=1\",\n  description: \"Tjeneste som konverterer bilder til svg-bilder via Sqip\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full bg-background\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full font-din text-lg\">\n        <header className=\"mb-10 w-full bg-regn py-10 px-5\">\n          <Link to=\"/\">\n            <p>Bildeoptimalisering med trekanter</p>\n          </Link>\n        </header>\n        <main className=\"m-auto h-full w-5/6\">\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </main>\n      </body>\n    </html>\n  );\n}\n", "import type { Konvertering } from \"@prisma/client\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { PhotoAttribution } from \"../../components/PhotoAttribution\";\nimport type { Metadata } from \"../../services/sqip\";\nimport { fetchFromUnsplashAndRunThroughSqip } from \"../../services/sqip\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const photoId = params.photoId;\n\n  if (!photoId) {\n    throw json({ message: \"Unsplash id er tom\" }, 409);\n  }\n\n  const alternativeImages = [10, 50, 100, 300, 500, 1000];\n\n  const result: Konvertering[] = [];\n  await Promise.all(\n    alternativeImages.map(async (numOfPrimitive) => {\n      const resultatFraKonvertering = await fetchFromUnsplashAndRunThroughSqip(\n        photoId,\n        numOfPrimitive\n      );\n      result.push(...resultatFraKonvertering);\n    })\n  );\n\n  return json(\n    {\n      result: result.sort(\n        (a, b) => a.numberOfPrimitives - b.numberOfPrimitives\n      ),\n    },\n    200\n  );\n};\n\nexport default function UnsplashUrl() {\n  const data = useLoaderData<{ result: Konvertering[] }>();\n  const metadata = JSON.parse(data.result[0].metadata) as Metadata;\n  const unsplash = metadata.unsplashResponse?.response;\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <h1 className=\"font-bold\">Originalbilde</h1>\n      <p>\n        Original st\u00F8rrelse p\u00E5 bilde:{\" \"}\n        {parseInt(metadata.originalStorrelse).toFixed(2)} MB\n      </p>\n      <img\n        className=\"w-2/5\"\n        src={`/${metadata.nedlastetBildePath}`}\n        alt=\"Originalbilde\"\n      />\n      <p>\n        {unsplash?.exif.aperture} / {unsplash?.exif.exposure_time} -{\" \"}\n        {unsplash?.exif.model}\n      </p>\n      <PhotoAttribution\n        attributionLink={unsplash?.links.html ?? \"\"}\n        photoBy={unsplash?.user.name ?? \"\"}\n        userProfileLink={unsplash?.user.links.html ?? \"\"}\n      />\n      <div className=\"mt-10\">\n        <h1 className=\"text-center font-bold\">SVG etter konvertering</h1>\n\n        <div className=\"grid grid-cols-3 gap-10\">\n          {data.result.map((result) => {\n            const metadata = JSON.parse(result.metadata) as Metadata;\n            return (\n              <div className=\"mb-10\" key={result.id}>\n                <p>Ny st\u00F8rrelse p\u00E5 bilde: {metadata.nyStorrelse} MB</p>\n                <img\n                  src={`/${metadata.resultatSvgPath}`}\n                  alt=\"SVG av originalbilde\"\n                />\n                <p>Antall primitives: {result.numberOfPrimitives}</p>\n                <p>Du sparer {metadata.prosentSpart} %</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <Link className=\"rounded-md bg-accent py-5 px-10\" to=\"/search\">\n        Nytt s\u00F8k\n      </Link>\n    </div>\n  );\n}\n", "export const APP_NAME = \"fagdagstand\";\nexport const UNSPLASH_URL = \"https://unsplash.com\";\n", "import { APP_NAME, UNSPLASH_URL } from \"../constants\";\n\ninterface Props {\n  userProfileLink: string;\n  photoBy: string;\n  attributionLink: string;\n}\n\nfunction utmQueries() {\n  return `?utm_source=${APP_NAME}&utm_medium=referral`;\n}\n\nexport function PhotoAttribution({\n  userProfileLink,\n  photoBy,\n  attributionLink,\n}: Props) {\n  return (\n    <small>\n      Foto av{\" \"}\n      <a className=\"underline\" href={`${userProfileLink}${utmQueries()}`}>\n        {\" \"}\n        {photoBy}{\" \"}\n      </a>{\" \"}\n      fra{\" \"}\n      <a className=\"underline\" href={`${UNSPLASH_URL}${utmQueries()}`}>\n        Unsplash\n      </a>{\" \"}\n    </small>\n  );\n}\n", "import { Konvertering } from \"@prisma/client\";\nimport type { Stats } from \"fs\";\nimport fsPromise from \"fs/promises\";\nimport path from \"path\";\nimport type { PluginOptions, SqipResult } from \"sqip\";\nimport { sqip } from \"sqip\";\nimport { ApiResponse } from \"unsplash-js/dist/helpers/response\";\nimport { Full } from \"unsplash-js/dist/methods/photos/types\";\nimport { prisma } from \"../lib/db.server\";\nimport { downloadImage } from \"./imageDownloadService\";\nimport { getPhotoById } from \"./unsplash\";\n\nexport interface Metadata {\n  originalStorrelse: string;\n  nyStorrelse: string;\n  prosentSpart: string;\n  nedlastetBildePath: string;\n  resultatSvgPath: string;\n  unsplashResponse: ApiResponse<Full> | undefined;\n}\n\nfunction regnUtStorrelseIMB(fil: Stats): number {\n  return fil.size / (1024 * 1024);\n}\n\nfunction regnUtBesparelseIProsent(\n  original: number,\n  nyStorrelse: number\n): number {\n  const x = original - nyStorrelse;\n  return (x / original) * 100;\n}\n\nasync function lagreFilTilMappe(destination: string, content: any) {\n  await fsPromise.writeFile(destination, content);\n}\n\nasync function genererSqipBilde(\n  unsplashResponse: ApiResponse<Full>,\n  nedlastetBildePath: string,\n  options: PluginOptions\n) {\n  const result = (await sqip({\n    input: nedlastetBildePath,\n    plugins: [\n      {\n        name: \"sqip-plugin-primitive\",\n        options,\n      },\n      \"sqip-plugin-svgo\",\n    ],\n  })) as Partial<SqipResult>;\n\n  // TODO Her m\u00E5 vi ogs\u00E5 lagre med blur, numberOfPrimitives og mode for svg-filen\n  const resultatSvgPath = `${path.dirname(__dirname)}/public/images/${\n    unsplashResponse?.response?.id\n  }-${options.numberOfPrimitives}.svg`;\n  await lagreFilTilMappe(resultatSvgPath, result.content);\n\n  const original = await fsPromise.stat(nedlastetBildePath);\n  const resultat = await fsPromise.stat(resultatSvgPath);\n\n  const originalStorrelse = regnUtStorrelseIMB(original);\n  const nyStorrelse = regnUtStorrelseIMB(resultat);\n\n  const prosentSpart = regnUtBesparelseIProsent(\n    originalStorrelse,\n    nyStorrelse\n  ).toFixed(2);\n\n  const jsonResult: Metadata = {\n    originalStorrelse: originalStorrelse.toString(),\n    nyStorrelse: nyStorrelse.toFixed(10),\n    prosentSpart,\n    nedlastetBildePath: path.join(\"images\", path.basename(nedlastetBildePath)),\n    resultatSvgPath: path.join(\"images\", path.basename(resultatSvgPath)),\n    unsplashResponse,\n  };\n  return jsonResult;\n}\n\nexport async function fetchFromUnsplashAndRunThroughSqip(\n  photoId: string,\n  numberOfPrimitives: number = 500\n): Promise<Konvertering[]> {\n  // TODO Her m\u00E5 vi ogs\u00E5 sjekke mode, number of primitives og blur\n  const metadataFinnesFraFor = await prisma.konvertering.findMany({\n    where: { unsplashId: photoId, numberOfPrimitives },\n    orderBy: { numberOfPrimitives: \"asc\" },\n  });\n\n  if (metadataFinnesFraFor.length) {\n    return metadataFinnesFraFor.map<Konvertering>((meta) => {\n      const metadata = JSON.parse(meta.metadata) as Metadata;\n      return {\n        ...metadata,\n        ...meta,\n      };\n    });\n  }\n\n  const unsplashResponse = await getPhotoById(photoId);\n  const unsplashUrl = (unsplashResponse?.response?.urls.raw ?? \"\") + \".png\";\n  const nedlastetBildePath = `${path.dirname(\n    __dirname\n  )}/public/images/${photoId}.png`;\n\n  await downloadImage(unsplashUrl, nedlastetBildePath);\n  const options = {\n    numberOfPrimitives,\n    mode: 1,\n    blur: 0,\n  };\n\n  const konvertering = await genererSqipBilde(\n    unsplashResponse!,\n    nedlastetBildePath,\n    options\n  );\n\n  const savedKonvertering = await prisma.konvertering.create({\n    data: {\n      unsplashId: unsplashResponse?.response?.id!!,\n      metadata: JSON.stringify(konvertering),\n      blur: options.blur,\n      mode: options.mode,\n      numberOfPrimitives: options.numberOfPrimitives,\n      pathOriginalbilde: konvertering.nedlastetBildePath,\n      pathSvgBilde: konvertering.resultatSvgPath,\n    },\n  });\n  return [savedKonvertering];\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import download from \"image-downloader\";\n\nexport async function downloadImage(url: string, filepath: string) {\n  try {\n    const result = await download.image({\n      url,\n      dest: filepath,\n      maxHeaderSize: undefined,\n    });\n\n    console.log(\n      `Resultat fra nedlasting og lagring av bilde: ${result.filename}`\n    );\n  } catch (error) {\n    console.log(\"Klarte ikke lagre bilde\", error);\n  }\n}\n", "import { createApi } from \"unsplash-js\";\n\nconst serverApi = createApi({\n  accessKey: process.env.UNSPLASH_ACCESS_KEY!,\n});\n\nconst searchPhotos = async (query: string) => {\n  try {\n    const result = await serverApi.search.getPhotos({\n      query,\n      perPage: 20,\n    });\n    return result;\n  } catch (error) {\n    console.error(\"Klarte ikke s\u00F8ke etter bilder\", error);\n  }\n};\n\nconst getPhotoById = async (id: string) => {\n  try {\n    const result = await serverApi.photos.get({\n      photoId: id,\n    });\n    return result;\n  } catch (error) {\n    console.error(`Klarte ikke finne bilde med id: ${id}`, error);\n  }\n};\n\nexport { searchPhotos, getPhotoById };\n", "import {\n  Form,\n  Link,\n  useLoaderData,\n  useSearchParams,\n  useTransition,\n} from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { PhotoAttribution } from \"../../components/PhotoAttribution\";\nimport { Soketips } from \"../../components/Soketips\";\nimport type { UnsplashResponse } from \"../../domain/UnsplashResponse\";\nimport { searchPhotos } from \"../../services/unsplash\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const search = new URLSearchParams(url.search);\n  const query = search.get(\"query\");\n  if (!query) return json([], 200);\n\n  const results = await searchPhotos(query);\n\n  return json(results);\n};\n\nexport default function UnsplashSearchRoute() {\n  const actionData = useLoaderData<UnsplashResponse>();\n  const transition = useTransition();\n  const [search] = useSearchParams();\n\n  if (\n    transition.state === \"loading\" &&\n    transition.location.pathname.includes(\"/unsplash\")\n  ) {\n    return (\n      <div className=\"flex flex-col items-center\">\n        <p>\n          Henter bilde fra Unsplash, knasker det gjennom Sqip og spytter ut svg.\n          Vennligst vent...\n        </p>\n        <img\n          className=\"mt-10 h-64 rounded-lg bg-white shadow-lg\"\n          src=\"/sauelaster.gif\"\n          alt=\"\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <Form method=\"get\" className=\"w-3/5\">\n        <div className=\"my-5 flex flex-col items-center\">\n          <label htmlFor=\"query\" className=\"my-2\">\n            S\u00F8k via{\" \"}\n            <a className=\"underline\" href=\"https://unsplash.com/\">\n              Unsplash\n            </a>\n          </label>\n          <input\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"S\u00F8k p\u00E5 engelsk\"\n            className=\"w-full rounded-lg p-2\"\n            defaultValue={search.get(\"query\") ?? \"\"}\n          />\n          <button\n            type=\"submit\"\n            className=\"mt-5 block rounded-lg bg-accent px-52 py-2\"\n          >\n            S\u00F8k\n          </button>\n        </div>\n      </Form>\n      <Soketips />\n\n      <div className=\"grid grid-cols-4 gap-5\">\n        {/* <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1604537529586-87ac173f4310?ixlib=rb-1.2.1&ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=988&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2370&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1604537529586-87ac173f4310?ixlib=rb-1.2.1&ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=988&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2370&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1604537529586-87ac173f4310?ixlib=rb-1.2.1&ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=988&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2370&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1604537529586-87ac173f4310?ixlib=rb-1.2.1&ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=988&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        />\n        <ImageLink\n          id={\"\"}\n          src=\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2370&q=80\"\n          altText={\"img.alt_description\"}\n          photoBy={\"img.user.name\"}\n          attributionLink={\"img.links.download\"}\n          userProfileLink={\"testing.com\"}\n        /> */}\n\n        {actionData?.response?.results.map((img) => {\n          return (\n            <ImageLink\n              key={img.id}\n              id={img.id}\n              src={img.urls.regular}\n              altText={img.alt_description}\n              photoBy={img.user.name}\n              attributionLink={img.links.html}\n              userProfileLink={img.user.links.html}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction ImageLink({\n  src,\n  id,\n  altText = \"\",\n  photoBy,\n  attributionLink,\n  userProfileLink,\n}: {\n  src: string;\n  id: string;\n  altText?: string;\n  photoBy: string;\n  attributionLink: string;\n  userProfileLink: string;\n}) {\n  return (\n    <div className=\"flex flex-1 flex-col\">\n      <Link to={`/unsplash/${encodeURIComponent(id)}`}>\n        <img\n          className=\"h-96 w-96 object-cover shadow-lg\"\n          alt={altText}\n          src={src}\n        />\n      </Link>\n      <PhotoAttribution\n        attributionLink={attributionLink}\n        photoBy={photoBy}\n        userProfileLink={userProfileLink}\n      />\n    </div>\n  );\n}\n", "import { Link } from \"react-router-dom\";\n\nconst tips = [\n  { emoji: \"\uD83D\uDE3B\", query: \"kittens\" },\n  { emoji: \"\uD83D\uDC36\", query: \"puppies\" },\n  { emoji: \"\uD83C\uDF41\", query: \"fall\" },\n  { emoji: \"\uD83C\uDF55\", query: \"pizza\" },\n  { emoji: \"\uD83D\uDC20\", query: \"fish\" },\n  { emoji: \"\uD83D\uDCF8\", query: \"photography\" },\n  { emoji: \"\uD83D\uDC22\", query: \"turtles\" },\n  { emoji: \"\uD83E\uDD84\", query: \"unicorns\" },\n  { emoji: \"\uD83D\uDC3F\", query: \"chipmunks\" },\n];\n\nexport function Soketips() {\n  return (\n    <div className=\"text-center\">\n      <p>Usikker p\u00E5 hva du skal s\u00F8ke etter?</p>\n      <p>Trykk p\u00E5 en av emojiene og se hva som skjer...</p>\n      <div className=\"my-10 grid grid-cols-3 gap-5 text-4xl\">\n        {tips.map(({ emoji, query }) => {\n          return (\n            <Link key={query} to={`/search?query=${query}`}>\n              {emoji}\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderArgs } from \"@remix-run/node\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n}\n", "import type { Konvertering } from \"@prisma/client\";\nimport { Link, Outlet, useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { prisma } from \"../lib/db.server\";\n\nexport const loader: LoaderFunction = async () => {\n  const tidligereBilder = await prisma.konvertering.findMany({\n    take: 50,\n    where: { numberOfPrimitives: 500 },\n  });\n\n  return json(tidligereBilder);\n};\n\nexport default function Index() {\n  const loaderData = useLoaderData<Konvertering[]>();\n\n  return (\n    <main className=\"m-auto flex w-5/6 flex-col content-center items-center\">\n      <Link className=\"rounded-lg bg-accent p-10\" to=\"/search\">\n        Generer et nytt bilde\n      </Link>\n      {loaderData.length ? (\n        <>\n          <h2 className=\"mt-20 mb-5\">Tidligere konverteringer</h2>\n          <div className=\"grid grid-cols-4 gap-5\">\n            {loaderData?.map((data) => {\n              const metadata = JSON.parse(data.metadata);\n              return (\n                <Link\n                  prefetch=\"intent\"\n                  key={data.id}\n                  to={`/unsplash/${data.unsplashId}`}\n                >\n                  <img\n                    className=\"h-96 w-96 bg-black object-cover p-2 shadow-lg\"\n                    alt={\n                      metadata?.alt_description ??\n                      \"Bilde av en tidligere konvertering\"\n                    }\n                    src={data.pathSvgBilde}\n                  />\n                </Link>\n              );\n            })}\n          </div>\n        </>\n      ) : null}\n\n      <Outlet />\n    </main>\n  );\n}\n", "export default {'version':'99fe5ff4','entry':{'module':'/build/entry.client-LFQEXK5H.js','imports':['/build/_shared/chunk-HLUDVZYK.js','/build/_shared/chunk-42Z7WWMI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GZHQU5YN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-VW3PL5WX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4N5QE3LJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/search/index':{'id':'routes/search/index','parentId':'root','path':'search','index':true,'caseSensitive':undefined,'module':'/build/routes/search/index-VMN6RKQ4.js','imports':['/build/_shared/chunk-4PIG6PW6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/unsplash/$photoId':{'id':'routes/unsplash/$photoId','parentId':'root','path':'unsplash/:photoId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/unsplash/$photoId-KJ42HSEO.js','imports':['/build/_shared/chunk-4PIG6PW6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-99FE5FF4.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/unsplash/$photoId.tsx\";\nimport * as route2 from \"./routes/search/index.tsx\";\nimport * as route3 from \"./routes/healthcheck.tsx\";\nimport * as route4 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/unsplash/$photoId\": {\n      id: \"routes/unsplash/$photoId\",\n      parentId: \"root\",\n      path: \"unsplash/:photoId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/search/index\": {\n      id: \"routes/search/index\",\n      parentId: \"root\",\n      path: \"search\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_react", "download", "fsPromise", "path", "meta", "metadata", "loader", "import_react", "import_server_runtime", "loader", "loader", "loader", "import_react", "import_server_runtime", "loader"]
}
