{
  "version": 3,
  "sources": ["../../../../app/routes/search/index.tsx"],
  "sourcesContent": ["import { Link, useActionData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/server-runtime\";\nimport type { ActionFunction } from \"@remix-run/server-runtime\";\nimport { searchPhotos } from \"../../services/unsplash\";\nimport type { UnsplashResponse } from \"../../domain/UnsplashResponse\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const query = formData.get(\"query\")?.toString();\n  if (!query) {\n    throw json({\n      status: \"409\",\n      error: \"Bad request - 'query' is null or not provided\",\n    });\n  }\n  const results = await searchPhotos(query);\n\n  return json(results);\n};\n\nexport default function UnsplashSearchRoute() {\n  const actionData = useActionData<UnsplashResponse>();\n\n  return (\n    <>\n      <Link className=\"underline\" to=\"..\">\n        Forsiden\n      </Link>\n      <form method=\"post\" action=\"/search?index\">\n        <div className=\"my-5 flex flex-col items-center\">\n          <label htmlFor=\"query\">S\u00F8k hos Unsplash</label>\n          <input\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"S\u00F8k p\u00E5 engelsk\"\n            className=\"rounded-lg p-2\"\n          />\n          <button\n            type=\"submit\"\n            className=\"mt-2 block w-full rounded-lg bg-accent\"\n          >\n            S\u00F8k\n          </button>\n        </div>\n      </form>\n      <div className=\"grid grid-cols-5 gap-10\">\n        {actionData?.response?.results.map((img) => {\n          return (\n            <Link\n              key={img.id}\n              to={`/unsplash/${encodeURIComponent(img.urls.regular)}`}\n            >\n              <img alt={img.alt_description} src={img.urls.regular} />\n            </Link>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;AAAA;AAoBe,SAAR,sBAAuC;AApB9C;AAqBE,QAAM,aAAa,cAAgC;AAEnD,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAK,WAAU;AAAA,QAAY,IAAG;AAAA,QAAK;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAK,QAAO;AAAA,QAAO,QAAO;AAAA,QACzB,6DAAC;AAAA,UAAI,WAAU;AAAA,UACb;AAAA,+DAAC;AAAA,cAAM,SAAQ;AAAA,cAAQ;AAAA,eAAvB;AAAA;AAAA;AAAA;AAAA,mBAAuC;AAAA,YACvC,mDAAC;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,WAAU;AAAA,eAJZ;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,YACA,mDAAC;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACX;AAAA,eAHD;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WAbF;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACZ,yDAAY,aAAZ,mBAAsB,QAAQ,IAAI,CAAC,QAAQ;AAC1C,iBACE,mDAAC;AAAA,YAEC,IAAI,aAAa,mBAAmB,IAAI,KAAK,OAAO;AAAA,YAEpD,6DAAC;AAAA,cAAI,KAAK,IAAI;AAAA,cAAiB,KAAK,IAAI,KAAK;AAAA,eAA7C;AAAA;AAAA;AAAA;AAAA,mBAAsD;AAAA,aAHjD,IAAI,IADX;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,QAEJ;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA;AAAA,KAhCF;AAAA;AAAA;AAAA;AAAA,SAiCA;AAEJ;",
  "names": []
}
