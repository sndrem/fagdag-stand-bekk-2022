{
  "version": 3,
  "sources": ["../../../../app/routes/unsplash/$unsplashId.tsx"],
  "sourcesContent": ["import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { fetchFromUnsplashAndRunThroughSqip } from \"../../services/sqip\";\n\ninterface KonverteringData {\n  originalStorrelse: string;\n  nyStorrelse: string;\n  prosentSpart: string;\n  nedlastetBildePath: string;\n  resultatSvgPath: string;\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const unsplashId = params.unsplashId;\n\n  if (!unsplashId) {\n    throw json({ message: \"Unsplash id er tom\" }, 409);\n  }\n\n  const resultatFraKonvertering = await fetchFromUnsplashAndRunThroughSqip(\n    unsplashId\n  );\n  console.log(resultatFraKonvertering);\n  return json({ result: resultatFraKonvertering }, 200);\n};\n\nexport default function UnsplashUrl() {\n  const data = useLoaderData<{ result: KonverteringData }>();\n  console.log(data.result);\n  return (\n    <>\n      <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2, 1fr)\" }}>\n        <div>\n          <h1>Originalbilde</h1>\n          <img\n            className=\"h-1/3\"\n            src={`/${data.result.nedlastetBildePath}`}\n            alt=\"Originalbilde\"\n          />\n        </div>\n        <div>\n          <h1>SVG etter konvertering</h1>\n          <img\n            className=\"h-1/3\"\n            src={`/${data.result.resultatSvgPath}`}\n            alt=\"SVG av originalbilde\"\n          />\n        </div>\n      </div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </>\n  );\n}\n"],
  "mappings": ";;;;;;;;;AAAA;AA2Be,SAAR,cAA+B;AACpC,QAAM,OAAO,cAA4C;AACzD,UAAQ,IAAI,KAAK,MAAM;AACvB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAI,OAAO,EAAE,SAAS,QAAQ,qBAAqB,iBAAiB;AAAA,QACnE;AAAA,6DAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAiB;AAAA,cACjB,mDAAC;AAAA,gBACC,WAAU;AAAA,gBACV,KAAK,IAAI,KAAK,OAAO;AAAA,gBACrB,KAAI;AAAA,iBAHN;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UACA,mDAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAA0B;AAAA,cAC1B,mDAAC;AAAA,gBACC,WAAU;AAAA,gBACV,KAAK,IAAI,KAAK,OAAO;AAAA,gBACrB,KAAI;AAAA,iBAHN;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,MACA,mDAAC;AAAA,QAAK,eAAK,UAAU,MAAM,MAAM,CAAC;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA;AAAA,KAnBtC;AAAA;AAAA;AAAA;AAAA,SAoBA;AAEJ;",
  "names": []
}
