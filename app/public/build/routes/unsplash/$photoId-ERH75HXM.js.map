{
  "version": 3,
  "sources": ["../../../../app/routes/unsplash/$photoId.tsx"],
  "sourcesContent": ["import type { Konvertering } from \"@prisma/client\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { PhotoAttribution } from \"../../components/PhotoAttribution\";\nimport type { Metadata } from \"../../services/sqip\";\nimport { fetchFromUnsplashAndRunThroughSqip } from \"../../services/sqip\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const photoId = params.photoId;\n\n  if (!photoId) {\n    throw json({ message: \"Unsplash id er tom\" }, 409);\n  }\n\n  const alternativeImages = [100, 300, 500, 1000];\n\n  const result: Konvertering[] = [];\n  await Promise.all(\n    alternativeImages.map(async (numOfPrimitive) => {\n      const resultatFraKonvertering = await fetchFromUnsplashAndRunThroughSqip(\n        photoId,\n        numOfPrimitive\n      );\n      result.push(...resultatFraKonvertering);\n    })\n  );\n\n  return json({ result: result }, 200);\n};\n\nexport default function UnsplashUrl() {\n  const data = useLoaderData<{ result: Konvertering[] }>();\n  const metadata = JSON.parse(data.result[0].metadata) as Metadata;\n  const unsplash = metadata.unsplashResponse?.response;\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"grid grid-cols-2 gap-20 text-center\">\n        <div>\n          <h1 className=\"font-bold\">Originalbilde</h1>\n          <p>\n            Original st\u00F8rrelse p\u00E5 bilde:{\" \"}\n            {parseInt(metadata.originalStorrelse).toFixed(2)} MB\n          </p>\n          <img src={`/${metadata.nedlastetBildePath}`} alt=\"Originalbilde\" />\n          <p>\n            {unsplash?.exif.aperture} / {unsplash?.exif.exposure_time} -{\" \"}\n            {unsplash?.exif.model}\n          </p>\n          <PhotoAttribution\n            attributionLink={unsplash?.links.html ?? \"\"}\n            photoBy={unsplash?.user.name ?? \"\"}\n            userProfileLink={unsplash?.user.links.html ?? \"\"}\n          />\n        </div>\n\n        <div>\n          <h1 className=\"font-bold\">SVG etter konvertering</h1>\n          <div>\n            <p>Ny st\u00F8rrelse p\u00E5 bilde: {metadata.nyStorrelse} MB</p>\n            <img\n              src={`/${metadata.resultatSvgPath}`}\n              alt=\"SVG av originalbilde\"\n            />\n            <p>Antall primitives: {data.result[0].numberOfPrimitives}</p>\n          </div>\n          <div>\n            <p>Ny st\u00F8rrelse p\u00E5 bilde: {metadata.nyStorrelse} MB</p>\n            <img\n              src={`/${metadata.resultatSvgPath}`}\n              alt=\"SVG av originalbilde\"\n            />\n            <p>Antall primitives: {data.result[0].numberOfPrimitives}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"m-5\">\n        <p className=\"text-2xl\">Du sparer {metadata.prosentSpart} %</p>\n      </div>\n\n      <Link className=\"rounded-md bg-accent py-5 px-10\" to=\"/search\">\n        Nytt s\u00F8k\n      </Link>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
