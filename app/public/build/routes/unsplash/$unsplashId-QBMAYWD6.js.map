{
  "version": 3,
  "sources": ["../../../../app/routes/unsplash/$unsplashId.tsx"],
  "sourcesContent": ["import { useLoaderData } from \"@remix-run/react\";\nimport { json, LoaderFunction } from \"@remix-run/server-runtime\";\nimport { fetchFromUnsplashAndRunThroughSqip } from \"../../services/sqip\";\n\ninterface KonverteringData {\n  originalStorrelse: string;\n  nyStorrelse: string;\n  prosentSpart: string;\n  nedlastetBildePath: string;\n  resultatSvgPath: string;\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const unsplashId = params.unsplashId;\n\n  if (!unsplashId) {\n    throw json({ message: \"Unsplash id er tom\" }, 409);\n  }\n\n  const resultatFraKonvertering = await fetchFromUnsplashAndRunThroughSqip(\n    unsplashId\n  );\n  return json({ result: resultatFraKonvertering }, 200);\n};\n\nexport default function UnsplashUrl() {\n  const data = useLoaderData<KonverteringData>();\n  console.log(data);\n  return (\n    <>\n      <h1>Originalbilde</h1>\n      <img\n        className=\"h-1/3\"\n        src={`/${data.nedlastetBildePath}`}\n        alt=\"Originalbilde\"\n      />\n      <h1>SVG etter konvertering</h1>\n      <img\n        className=\"h-1/3\"\n        src={`/${data.resultatSvgPath}`}\n        alt=\"SVG av originalbilde\"\n      />\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </>\n  );\n}\n"],
  "mappings": ";;;;;;;;;AAAA;AAyBe,SAAR,cAA+B;AACpC,QAAM,OAAO,cAAgC;AAC7C,UAAQ,IAAI,IAAI;AAChB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAG;AAAA,SAAJ;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,MACjB,mDAAC;AAAA,QACC,WAAU;AAAA,QACV,KAAK,IAAI,KAAK;AAAA,QACd,KAAI;AAAA,SAHN;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QAAG;AAAA,SAAJ;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,MAC1B,mDAAC;AAAA,QACC,WAAU;AAAA,QACV,KAAK,IAAI,KAAK;AAAA,QACd,KAAI;AAAA,SAHN;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QAAK,eAAK,UAAU,MAAM,MAAM,CAAC;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA;AAAA,KAbtC;AAAA;AAAA;AAAA;AAAA,SAcA;AAEJ;",
  "names": []
}
